{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to Databases Introduction All databases should have several characteristics in common: Error prevention Multitask environment Multiuser (exhaustive control) Backups (without stopping the environment) File based aproach In the past, files were used to store data. However, it lacks a lot of important characteristics that databases provide us. A multiuser environment is hard to implement. Using users in a machine is not the best option in practice. A multiuser environment allows us to have a security policy as well as sharing data among users/apps. Constraints are also hard to create and changes in the system required very drastic changes, which is not ideal. In order to palliate these problems, usually an application was developed, but it required constant development and management; and most of the responsibility was given to the developers. Concepts When talking about databases there are several important concepts that we should be familiarized with. Data distribution and access According to where the database can be accessed, several types can be found: Local Applications do not require data from other sites. Centralized Applications that require data from other sites Distributed Homogeneuos Has identical software and hardware running all database instances, and may appear through a single interface as if it were a single database. Heterogeneous They may have different hardware, operating systems, database management systems, and even data models for different databases. Data Model A data model explicitly determines the structure , manipulation and integrity aspects of the data stored in the data management systems (e.g. relational databases). There are several kinds of database models. Some of them are the flat model, the hierarchical model, the network model or the relational model. There are a lot of models and they are just put here to stimulate the curiosity of the reader. By contrast, we are going to see three possible perspective that were stated in a report in1975 by ANSI. In 1975, ANSI-SPARC declared 3 possible perspectives that conform the three level architecture . Its main objectives is to simplify the database management from the user by separating the main database from what the user actually sees, each one having a custom view of the data different from the other users and allowing the hardware to be changed without altering the user's view. External level This is the level that the user actually sees, showing the most important data for each user and excluding the data that is not as important as the others. Logical/Conceptual level This is the intermediate level, which describes the way parts of the database are connected and how they interact with each other and also describing which data is stored where. Physical/Internal level It is the lowest level, it describes the physical means by which the data are stored (partitions, CPUs, tablespaces, etc.). It might also include the discussion of compression and encryption techniques. DBMS The goal is to create and manage database elements from a software/manager . This software should be in charge of data manipulation , recovery routines , security and integrity constraints . A DBMS provides an extra layer of security, as it makes the access to the database impossible without it. So, if we were to try to access the database directly from a programming language (like accessing a file) we would fail. Some examples might be: protecting the money in a system failure of a banking system or making sure that the data is not lost or stolen in a reservation. Schema The database schema is its structure described in a formal language (the one supported by the DBMS). Integrity constraints are stated here. In a relational database a schema can define the tables, fields, relationships, etc. Schemas are usually stored in a data dictionary. DB users According to what/how the users require of the database there are several types. Application programmers Interact with the database by using DML queries in whatever programming language they are using. The queries are converted into object code which interacts with the database. Sophisticated users Database developers in charge of writing SQL queries to select/insert/delete/update data. They interact with the database directly with SQL and DBMS. Specializad users Sophisticated users in charge of writing special database application programs. Stand-alone users Use the database for personal use. Native users Use an application to interact with the database. They might even not be aware that they are using a database (or what is a database). DBA DBA or Database administrators are in charge of a lot of responsibilities. Some of them are installing/upgrading the DBMS servers, design and implement the databases,migrate or recover them and making sure that the security and performance are in good shape. Relational database A relational database is a database based on a relational model of data. They usually use SQL for querying and maintaining the database. In the relational model the data is organized into one or more tables. They have columns and rows with unique keys (used for identification). Each table usually represents one entity type and the rows represents an entity. Integrity Data integrity ensures overall completeness , accuracy and consistency of data. It is imposed by the means of error-checking methods and validation procedures that are usually discussed in the database design phase. There are several types of integrities according to what it concerns: entity, referential and domain integrity. All the data must be connected to other data and have the possibility of being traced. This allows that everything is recoverable and searchable. ACID vs BASE ACID and BASE are both sets of properties for database transactions. They are meant to ensure validity even if errors occur. ACID stands for Atomicity , Consistency , Isolation and Durability . Just like UNIX commands, an ACID transaction might be composed of several pieces but will be treated as a single one. If one piece fails/crashes, the entire transaction will become invalid, this phenomenon is called atomicity . Consistency will guarantee that the database is only in a valid state. In other words, prevents that the database gets corrupted by an illegal transaction. In order to achieve this, the database has to fulfill a set of defined rules. Due to concurrency, several transactions might be being processed at the moment. Isolation allows us to have some concurrency control and withdraw any effects from other transactions (have independence). Finally Durability assures that if a transaction was successfully committed, it will stay like that even if a crash is produced. On the other hand BASE stands for Basically Available , Soft state , Eventually consistent . Basically Available means that the system is available for querying by all users (no isolation is present). The database is only available \"most of the time\". A response will always be generated, but there is a possibility of it being a failure. The data is not immediately added to all nodes, it happens gradually, as it propagates across all nodes. This is called eventually consistent . Because of the \"eventual consistency model\" the values in the system might change (even when no transaction is made), and not all replicas are consistent, therefore the soft state . Despite ACID systems being the standard for most of database history, BASE systems may start to rise in use due to the amount of cost eventual consistency saves in comparison to having every transaction be checked individually. Metadata Metadata is \"data information that provides information about other data\u201d. Another way of thinking of metadata is as a short explanation or summary of what a data is. There are several types of metadata, which are: descriptive, structural, administrative, reference and statistical metadata. Descriptive metadata - describes information such as who made a file, where was it taken and how big the file is so it is used for discovery and identification Structural metadata - describes the structure of database objects such as tables, columns, keys and indexes - how the components of an object are organized Administrative metadata - information to help manage a resource, resource type, permissions Reference metadata - information about the contents and quality of statistical data. Statistical metadata - describe processes that collect, process, or produce statistical data For example, an image may include metadata that describes how large the picture is, the color depth, the image resolution and when the image was created. Author, date created, date modified and file size are examples of very basic document metadata. There are several uses of metadata: The most frequent application is the refinement of the queries on the search engines, because thanks to the additional information of metadata they are faster and more accurate so the user can avoid manual filters. Additionally, exists the problem that the user and the PC don't understand each other because the last one cannot interpret the meaning of data. Metadata can solve this explaining how related the data is. Finally, make data compression more efficient and the presentation of variable data, for instance, a video software can distinguish the first plane and the background and a mobile phone can recognize what is a person or not at the moment of taking a photograph. On-Line Transaction Processing (OLTP) It is a kind of system that is thoroughly used all over the world nowadays, and I dare say, is the most popular type of online systems (such as most of the web CRUD applications). Examples of such systems are ATMs, any type of online bank transaction, shopping on amazon, or even adding a book review on goodreads. OLTP is primarily backed by a database server that must meet a few crucial criteria. Transaction in the name stands for the fact that updates to the database need to be executed \"atomically\" which means that database must have consistent state to any user that will try to access it at a given point in time, thus the session is executed within a context of \"transaction\" between a user and a DB server. The criteria that DB must meet are most importantly: atomicity, concurrent access by many users at once, and integrity. Big concern of OLTP systems is concurrent access and its security, since DB should not be accessed by 2 users at the same time trying to modify the same data. Due to that fact, serious security checks need to be implemented. In a nutshell, OLTP is the idea that we all have in mind when whe think of a database. Data Warehousing A data warehouse is a system used for reporting and data analysis. Data Warehouses store current and historical data. The data may pass through a data cleasing and other operations which ensure data quality for reporting. In-memory databases An in-memory database relies on main memory for computer data storage. In-memory databases achieve much better speeds as accessing the memory is much faster than using a disk. These kinds of databases are used for applications where the response time is critical. In the past, this was totally unimaginable as the costs were very high. However, not everything is advantages, RAM is volatile, and in an event of a power loss, the data stored is lost.","title":"Introduction to Databases"},{"location":"#introduction-to-databases","text":"","title":"Introduction to Databases"},{"location":"#introduction","text":"All databases should have several characteristics in common: Error prevention Multitask environment Multiuser (exhaustive control) Backups (without stopping the environment)","title":"Introduction"},{"location":"#file-based-aproach","text":"In the past, files were used to store data. However, it lacks a lot of important characteristics that databases provide us. A multiuser environment is hard to implement. Using users in a machine is not the best option in practice. A multiuser environment allows us to have a security policy as well as sharing data among users/apps. Constraints are also hard to create and changes in the system required very drastic changes, which is not ideal. In order to palliate these problems, usually an application was developed, but it required constant development and management; and most of the responsibility was given to the developers.","title":"File based aproach"},{"location":"#concepts","text":"When talking about databases there are several important concepts that we should be familiarized with.","title":"Concepts"},{"location":"#data-distribution-and-access","text":"According to where the database can be accessed, several types can be found:","title":"Data distribution and access"},{"location":"#local","text":"Applications do not require data from other sites.","title":"Local"},{"location":"#centralized","text":"Applications that require data from other sites","title":"Centralized"},{"location":"#distributed","text":"","title":"Distributed"},{"location":"#homogeneuos","text":"Has identical software and hardware running all database instances, and may appear through a single interface as if it were a single database.","title":"Homogeneuos"},{"location":"#heterogeneous","text":"They may have different hardware, operating systems, database management systems, and even data models for different databases.","title":"Heterogeneous"},{"location":"#data-model","text":"A data model explicitly determines the structure , manipulation and integrity aspects of the data stored in the data management systems (e.g. relational databases). There are several kinds of database models. Some of them are the flat model, the hierarchical model, the network model or the relational model. There are a lot of models and they are just put here to stimulate the curiosity of the reader. By contrast, we are going to see three possible perspective that were stated in a report in1975 by ANSI. In 1975, ANSI-SPARC declared 3 possible perspectives that conform the three level architecture . Its main objectives is to simplify the database management from the user by separating the main database from what the user actually sees, each one having a custom view of the data different from the other users and allowing the hardware to be changed without altering the user's view.","title":"Data Model"},{"location":"#dbms","text":"The goal is to create and manage database elements from a software/manager . This software should be in charge of data manipulation , recovery routines , security and integrity constraints . A DBMS provides an extra layer of security, as it makes the access to the database impossible without it. So, if we were to try to access the database directly from a programming language (like accessing a file) we would fail. Some examples might be: protecting the money in a system failure of a banking system or making sure that the data is not lost or stolen in a reservation.","title":"DBMS"},{"location":"#schema","text":"The database schema is its structure described in a formal language (the one supported by the DBMS). Integrity constraints are stated here. In a relational database a schema can define the tables, fields, relationships, etc. Schemas are usually stored in a data dictionary.","title":"Schema"},{"location":"#db-users","text":"According to what/how the users require of the database there are several types.","title":"DB users"},{"location":"#application-programmers","text":"Interact with the database by using DML queries in whatever programming language they are using. The queries are converted into object code which interacts with the database.","title":"Application programmers"},{"location":"#sophisticated-users","text":"Database developers in charge of writing SQL queries to select/insert/delete/update data. They interact with the database directly with SQL and DBMS.","title":"Sophisticated users"},{"location":"#specializad-users","text":"Sophisticated users in charge of writing special database application programs.","title":"Specializad users"},{"location":"#stand-alone-users","text":"Use the database for personal use.","title":"Stand-alone users"},{"location":"#native-users","text":"Use an application to interact with the database. They might even not be aware that they are using a database (or what is a database).","title":"Native users"},{"location":"#dba","text":"DBA or Database administrators are in charge of a lot of responsibilities. Some of them are installing/upgrading the DBMS servers, design and implement the databases,migrate or recover them and making sure that the security and performance are in good shape.","title":"DBA"},{"location":"#relational-database","text":"A relational database is a database based on a relational model of data. They usually use SQL for querying and maintaining the database. In the relational model the data is organized into one or more tables. They have columns and rows with unique keys (used for identification). Each table usually represents one entity type and the rows represents an entity.","title":"Relational database"},{"location":"#integrity","text":"Data integrity ensures overall completeness , accuracy and consistency of data. It is imposed by the means of error-checking methods and validation procedures that are usually discussed in the database design phase. There are several types of integrities according to what it concerns: entity, referential and domain integrity. All the data must be connected to other data and have the possibility of being traced. This allows that everything is recoverable and searchable.","title":"Integrity"},{"location":"#acid-vs-base","text":"ACID and BASE are both sets of properties for database transactions. They are meant to ensure validity even if errors occur. ACID stands for Atomicity , Consistency , Isolation and Durability . Just like UNIX commands, an ACID transaction might be composed of several pieces but will be treated as a single one. If one piece fails/crashes, the entire transaction will become invalid, this phenomenon is called atomicity . Consistency will guarantee that the database is only in a valid state. In other words, prevents that the database gets corrupted by an illegal transaction. In order to achieve this, the database has to fulfill a set of defined rules. Due to concurrency, several transactions might be being processed at the moment. Isolation allows us to have some concurrency control and withdraw any effects from other transactions (have independence). Finally Durability assures that if a transaction was successfully committed, it will stay like that even if a crash is produced. On the other hand BASE stands for Basically Available , Soft state , Eventually consistent . Basically Available means that the system is available for querying by all users (no isolation is present). The database is only available \"most of the time\". A response will always be generated, but there is a possibility of it being a failure. The data is not immediately added to all nodes, it happens gradually, as it propagates across all nodes. This is called eventually consistent . Because of the \"eventual consistency model\" the values in the system might change (even when no transaction is made), and not all replicas are consistent, therefore the soft state . Despite ACID systems being the standard for most of database history, BASE systems may start to rise in use due to the amount of cost eventual consistency saves in comparison to having every transaction be checked individually.","title":"ACID vs BASE"},{"location":"#metadata","text":"Metadata is \"data information that provides information about other data\u201d. Another way of thinking of metadata is as a short explanation or summary of what a data is. There are several types of metadata, which are: descriptive, structural, administrative, reference and statistical metadata. Descriptive metadata - describes information such as who made a file, where was it taken and how big the file is so it is used for discovery and identification Structural metadata - describes the structure of database objects such as tables, columns, keys and indexes - how the components of an object are organized Administrative metadata - information to help manage a resource, resource type, permissions Reference metadata - information about the contents and quality of statistical data. Statistical metadata - describe processes that collect, process, or produce statistical data For example, an image may include metadata that describes how large the picture is, the color depth, the image resolution and when the image was created. Author, date created, date modified and file size are examples of very basic document metadata. There are several uses of metadata: The most frequent application is the refinement of the queries on the search engines, because thanks to the additional information of metadata they are faster and more accurate so the user can avoid manual filters. Additionally, exists the problem that the user and the PC don't understand each other because the last one cannot interpret the meaning of data. Metadata can solve this explaining how related the data is. Finally, make data compression more efficient and the presentation of variable data, for instance, a video software can distinguish the first plane and the background and a mobile phone can recognize what is a person or not at the moment of taking a photograph.","title":"Metadata"},{"location":"#on-line-transaction-processing-oltp","text":"It is a kind of system that is thoroughly used all over the world nowadays, and I dare say, is the most popular type of online systems (such as most of the web CRUD applications). Examples of such systems are ATMs, any type of online bank transaction, shopping on amazon, or even adding a book review on goodreads. OLTP is primarily backed by a database server that must meet a few crucial criteria. Transaction in the name stands for the fact that updates to the database need to be executed \"atomically\" which means that database must have consistent state to any user that will try to access it at a given point in time, thus the session is executed within a context of \"transaction\" between a user and a DB server. The criteria that DB must meet are most importantly: atomicity, concurrent access by many users at once, and integrity. Big concern of OLTP systems is concurrent access and its security, since DB should not be accessed by 2 users at the same time trying to modify the same data. Due to that fact, serious security checks need to be implemented. In a nutshell, OLTP is the idea that we all have in mind when whe think of a database.","title":"On-Line Transaction Processing (OLTP)"},{"location":"#data-warehousing","text":"A data warehouse is a system used for reporting and data analysis. Data Warehouses store current and historical data. The data may pass through a data cleasing and other operations which ensure data quality for reporting.","title":"Data Warehousing"},{"location":"#in-memory-databases","text":"An in-memory database relies on main memory for computer data storage. In-memory databases achieve much better speeds as accessing the memory is much faster than using a disk. These kinds of databases are used for applications where the response time is critical. In the past, this was totally unimaginable as the costs were very high. However, not everything is advantages, RAM is volatile, and in an event of a power loss, the data stored is lost.","title":"In-memory databases"},{"location":"T2/","text":"Database Design","title":"Database Design"},{"location":"T2/#database-design","text":"","title":"Database Design"}]}