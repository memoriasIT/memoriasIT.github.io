{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Databases Notes Introduction All databases should have several characteristics in common: Error prevention Multitask environment Multiuser (exhaustive control) Backups (without stopping the environment) File based aproach In the past, files were used to store data. However, it lacks a lot of important characteristics that databases provide us. A multiuser environment is hard to implement. Using users in a machine is not the best option in practice. A multiuser environment allows us to have a security policy as well as sharing data among users/apps. Constraints are also hard to create and changes in the system required very drastic changeswhich is not ideal. In order to paliate these problems, usually an application was developed, but it required constant development and management; and most of the responsability was given to the developers. Concepts When talking about databases there are several important concepts that we should be familiarized with. Data Model A data model explicitly determines the structure, manipulation and integrity aspects of the data stored in the data mangagement systems (e.g. relational databases). There are several kinds of database models. Some of them are the flat model, the hierarchical model, the network model or the relational model. There are a lot of models and they are just put here to stimulate the curiosity of the reader. By contrast, we are going to see three possible perspective that were stated in a report in1975 by ANSI. In 1975, ANSI-SPARC declared 3 possible perspectives that conform the three level architecture. External level It is a high-level description of the data. It usually includes the main concepts and main relationships among them. Logical/Conceptual level Describes the semantics. It consists of descriptions of tables and columns, object oriented classes, etc.It does not care about how the data is actually stored. Physical/Internal level It is the lowest level, it describes the physical means by which the data are stored (partitions, CPUs, tablespaces, etc.). It might also include the discussion of compression and encyrption techniques. DBMS The goal is to create and manage database elements from a software/manager. This software should be in charge of data manipulation, recovery routines, security and inttegrity constraints. A DBMS provides an extra layer of security, as it makes the access to the database impossible without it. So, if we were to try to access the database directly from a programming language (like accessing a file) we would fail. DB users According to what/how the users require of the database there are several types. Application programmers Interact with the database by using DML queries in whatever programming language they are using.. The queries are converted into object code which interacts with the databasse. Sophisticated users Database developers in charge of writing SQL queries to select/insert/delete/update data. They interact with the database directly with SQL and DBMS. Specializad users Sophisticated users in charge of writing special database application programs. Stand-alone users Use the database for personal use. Native users Use an application to interact with the database. They might even not be aware that they are using a database (or what is a database). DBA DBA or Database administrators are in charge of a lot of responsabilities. Some of them are installing/upgrading the DBMS servers, design and implement the databases,migrate or recover them and making sure that the security and performance are in good shape. ACID vs BASE ACID and BASE are both sets of properties for database transactions. They are meant to ensure validity even if errors occur. ACID stands for Atomicity , Consistency , Isolation and Durability . Just like UNIX commands, an ACID transaction might be composed of several pieces but will be treated as a single one. If one piece fails/crashes, the entire transaction will become invalid. Consistency will guarantee that the database is only in a valid state. In other words, prevents that the database gets corrupted by an illegal transacion. Due to concurrency, several transactions might be being processed at the moment. Isolation allows us to have some concurrency control and withdraw any effects from other transactions. Finally Durability assures that if a transaction was successfully committed, it will stay like that even if a crash is produced. On the other hand BASE stands for Basically Available , Soft state , Eventually consistent . Basically Available means that the system is available for querying by all users (no isolation is present). The database is only available \"most of the time\". The data is not inmediately added to all nodes, it happens gradually, as it propagates acrosss all nodes. This is called eventually consistent . Because of the \"eventual consistency model\" the values in the system might change, and not all replicas are consistent, therefore the soft state . Relational database A relational database is a database based on a relational model of data. They usually use SQL for querying and maintaining the database. In the relational model the data is organized into one or more tables. They have columns and rows with unique keys (used for identification). Each table usually represents one entity type and the rows represents an entity. Integrity Data integrity ensures overall completeness, accuracy and consistency of data. It is imposed by the means of error-checking methods and validation procedures that are usually discussed in the database design phase. There are several types of integrities according to what it concerns: entity, referential and domain integrity. All the data must be connected to other dat and have the posibility of being traced. This allows that everything is recoverable and searchable. Schema The database schema is its structure described in a formal language (the one supported by the DBMS). Integrity constraints are stated here. In a relational database a schema can define the tables, fields, relationships, etc. Schemas are usually stored in a data dictionary. Metadata On-Line Transaction Processing (OLTP) Data Warehousing In-memory Clusters Data distribution and access Local Centralized Distributed Homogeneuos Heterogeneous","title":"Databases Notes"},{"location":"#databases-notes","text":"","title":"Databases Notes"},{"location":"#introduction","text":"All databases should have several characteristics in common: Error prevention Multitask environment Multiuser (exhaustive control) Backups (without stopping the environment)","title":"Introduction"},{"location":"#file-based-aproach","text":"In the past, files were used to store data. However, it lacks a lot of important characteristics that databases provide us. A multiuser environment is hard to implement. Using users in a machine is not the best option in practice. A multiuser environment allows us to have a security policy as well as sharing data among users/apps. Constraints are also hard to create and changes in the system required very drastic changeswhich is not ideal. In order to paliate these problems, usually an application was developed, but it required constant development and management; and most of the responsability was given to the developers.","title":"File based aproach"},{"location":"#concepts","text":"When talking about databases there are several important concepts that we should be familiarized with.","title":"Concepts"},{"location":"#data-model","text":"A data model explicitly determines the structure, manipulation and integrity aspects of the data stored in the data mangagement systems (e.g. relational databases). There are several kinds of database models. Some of them are the flat model, the hierarchical model, the network model or the relational model. There are a lot of models and they are just put here to stimulate the curiosity of the reader. By contrast, we are going to see three possible perspective that were stated in a report in1975 by ANSI. In 1975, ANSI-SPARC declared 3 possible perspectives that conform the three level architecture.","title":"Data Model"},{"location":"#dbms","text":"The goal is to create and manage database elements from a software/manager. This software should be in charge of data manipulation, recovery routines, security and inttegrity constraints. A DBMS provides an extra layer of security, as it makes the access to the database impossible without it. So, if we were to try to access the database directly from a programming language (like accessing a file) we would fail.","title":"DBMS"},{"location":"#db-users","text":"According to what/how the users require of the database there are several types.","title":"DB users"},{"location":"#application-programmers","text":"Interact with the database by using DML queries in whatever programming language they are using.. The queries are converted into object code which interacts with the databasse.","title":"Application programmers"},{"location":"#sophisticated-users","text":"Database developers in charge of writing SQL queries to select/insert/delete/update data. They interact with the database directly with SQL and DBMS.","title":"Sophisticated users"},{"location":"#specializad-users","text":"Sophisticated users in charge of writing special database application programs.","title":"Specializad users"},{"location":"#stand-alone-users","text":"Use the database for personal use.","title":"Stand-alone users"},{"location":"#native-users","text":"Use an application to interact with the database. They might even not be aware that they are using a database (or what is a database).","title":"Native users"},{"location":"#dba","text":"DBA or Database administrators are in charge of a lot of responsabilities. Some of them are installing/upgrading the DBMS servers, design and implement the databases,migrate or recover them and making sure that the security and performance are in good shape.","title":"DBA"},{"location":"#acid-vs-base","text":"ACID and BASE are both sets of properties for database transactions. They are meant to ensure validity even if errors occur. ACID stands for Atomicity , Consistency , Isolation and Durability . Just like UNIX commands, an ACID transaction might be composed of several pieces but will be treated as a single one. If one piece fails/crashes, the entire transaction will become invalid. Consistency will guarantee that the database is only in a valid state. In other words, prevents that the database gets corrupted by an illegal transacion. Due to concurrency, several transactions might be being processed at the moment. Isolation allows us to have some concurrency control and withdraw any effects from other transactions. Finally Durability assures that if a transaction was successfully committed, it will stay like that even if a crash is produced. On the other hand BASE stands for Basically Available , Soft state , Eventually consistent . Basically Available means that the system is available for querying by all users (no isolation is present). The database is only available \"most of the time\". The data is not inmediately added to all nodes, it happens gradually, as it propagates acrosss all nodes. This is called eventually consistent . Because of the \"eventual consistency model\" the values in the system might change, and not all replicas are consistent, therefore the soft state .","title":"ACID vs BASE"},{"location":"#relational-database","text":"A relational database is a database based on a relational model of data. They usually use SQL for querying and maintaining the database. In the relational model the data is organized into one or more tables. They have columns and rows with unique keys (used for identification). Each table usually represents one entity type and the rows represents an entity.","title":"Relational database"},{"location":"#integrity","text":"Data integrity ensures overall completeness, accuracy and consistency of data. It is imposed by the means of error-checking methods and validation procedures that are usually discussed in the database design phase. There are several types of integrities according to what it concerns: entity, referential and domain integrity. All the data must be connected to other dat and have the posibility of being traced. This allows that everything is recoverable and searchable.","title":"Integrity"},{"location":"#schema","text":"The database schema is its structure described in a formal language (the one supported by the DBMS). Integrity constraints are stated here. In a relational database a schema can define the tables, fields, relationships, etc. Schemas are usually stored in a data dictionary. Metadata On-Line Transaction Processing (OLTP) Data Warehousing In-memory Clusters","title":"Schema"},{"location":"#data-distribution-and-access","text":"","title":"Data distribution and access"},{"location":"#local","text":"","title":"Local"},{"location":"#centralized","text":"","title":"Centralized"},{"location":"#distributed","text":"","title":"Distributed"},{"location":"#homogeneuos","text":"","title":"Homogeneuos"},{"location":"#heterogeneous","text":"","title":"Heterogeneous"}]}